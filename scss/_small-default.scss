* {
  box-sizing: border-box;
}

header {
  margin-bottom: $gutter;
  padding: $gutter;
  background-color: #fdfdfd;
  h1,
  h2 {
    text-align: center;
    font-family: $headingFont;
  }
  h1 {
    font-size: 2rem;
  }
  h2 {
    font-size: 1.6rem;
  }
}

ul a {
  font-family: $copyFont;
}

nav {
  margin: 10px 15px;
  margin-bottom: 5px;
  display: flex;
  ul li {
    text-align: center;
    justify-content: center;
    /*transform: translateX(25px);*/
    float: left;
  }
  ul .active a {
    text-decoration: underline;
  }
  ul li a {
    justify-self: center;
    flex-basis: 33.33%;
    text-align: center;
    padding: 0.5rem 1rem;
    display: block;
    text-decoration: none;
    font-size: 1.1rem;
    color: #222;
    transition: background 0.75s ease, color 0.75s ease;
  }
}

main {
  padding: $gutter;

  background-color: $primaryColor;
  color: #fff;
  img {
    max-width: 100%;
    display: block;
  }
  figure {
    padding: $gutter;
    .smartphone-example {
      margin-bottom: 10px;
    }
    figcaption {
      font-size: 0.8rem;
      text-align: center;
      font-style: oblique;
      padding: 0.52rem;
    }
  }

  .figureWrapper img {
    margin: 0 auto;
  }

  article {
    font-family: $copyFont;
    h1,
    h2,
    h3 {
      font-family: $headingFont;
    }
    h1 {
      font-size: 2rem;
    }
    h2 {
      font-size: 1.8rem;
      padding: $gutter;
    }
    h3 {
      font-size: 1.5rem;
      padding: $gutter;
    }
    ul a {
      text-decoration: underline;
      color: white;
      font-weight: 700;
    }
    ul a:hover {
      font-style: oblique;
    }
  }

  p {
    padding: $gutter * 1.5;
    font-size: 1rem;
    line-height: 1.5;
  }
  p a {
    text-decoration: underline;
    color: white;
    font-weight: 700;
  }
  p a:hover {
    font-style: oblique;
  }
  li {
    padding: $gutter * 3;
    padding-top: 0;
    padding-bottom: 20px;
  }
}

.clearfix:after {
  content: "";
  display: table;
  clear: both;
}
.flexed {
  display: flex;
  flex-wrap: wrap;
}

@for $i from 1 through 12 {
  $w: ($i / 12) * 100%;
  .small-#{$i} {
    flex-basis: $w;
  }
}
